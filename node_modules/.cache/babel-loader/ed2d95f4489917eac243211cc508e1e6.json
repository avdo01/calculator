{"ast":null,"code":"var _jsxFileName = \"/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './AmortizationSchedule.module.css';\nimport logo from '../photos/forPrint.png';\nimport { nameOfMonths, nameOfMonthsShortcut } from '../Mocks/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AmortizationSchedule = ({\n  loanYears,\n  loanMonths,\n  payment\n}) => {\n  _s();\n\n  const [currentDate, setCurrentDate] = useState();\n  const [futureDate, setFutureDate] = useState();\n  const [numberOfMonths, setNumberOfMonths] = useState(0);\n  useEffect(() => {\n    if (Number.isInteger(loanYears) === true && Number.isInteger(loanMonths) === false && (loanMonths !== 0 || loanYears !== 0)) {\n      getDate('years');\n    } else if (Number.isNaN(loanYears) === true || Number.isNaN(loanMonths) === true) {\n      getDate('nan');\n    } else {\n      getDate('months');\n      addTableRows(loanMonths);\n    }\n  }, [loanYears, loanMonths]); // function pmt(rate, nper, pv, fv, type) {\n  //     if (!fv) fv = 0;\n  //     if (!type) type = 0;\n  //     if (rate == 0) { return -(pv + fv) / nper };\n  //     var pvif = Math.pow(1 + rate, nper);\n  //     var pmtt = rate / (pvif - 1) * -(pv * pvif + fv);\n  //     if (type == 1) {\n  //         pmtt /= (1 + rate);\n  //     };\n  //     return pmt;\n  // }\n  // function ipmt(pv, pmt, rate, per) {\n  //     var tmp = Math.pow(1 + rate, per);\n  //     return 0 - (pv * tmp * rate + pmt * (tmp - 1));\n  // }\n  // function ppmt(rate, per, nper, pv, fv, type) {\n  //     if (per < 1 || (per >= nper + 1)) { return null };\n  //     var pmtt = pmt(rate, nper, pv, fv, type);\n  //     var ipmtt = ipmt(pv, pmt, rate, per - 1);\n  //     return pmtt - ipmtt;\n  // }\n  // Last principal\n\n  function pmt(ir, np, pv, fv) {\n    /*\n    ir - interest rate per month\n    np - number of periods (months)\n    pv - present value\n    fv - future value (residual value)\n    */\n    var pmt = ir * (pv * Math.pow(ir + 1, np) + fv) / ((ir + 1) * (Math.pow(ir + 1, np) - 1));\n    return pmt.toFixed(2);\n  }\n\n  console.log('pmt', pmt(5 / 12 / 100, 24, 20000, 873.79));\n  console.log('interest', (5 / 100 / 6 * 20000).toFixed(2));\n\n  const currentMonth = () => {\n    var today = new Date();\n    return today.getMonth() + 1;\n  };\n\n  const currentYear = () => {\n    var today = new Date();\n    return today.getFullYear();\n  };\n\n  const addTableRows = loanMonths => {\n    var tableRows = [];\n    var counter = currentMonth() + 1;\n    var counterYears = currentYear();\n\n    for (var i = 0; i < loanMonths; i++) {\n      tableRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: styles.TableRow,\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyOne,\n          children: [nameOfMonthsShortcut[counter - 1], \" \", counterYears]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyTwo,\n          children: [\"$\", payment.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyThree,\n          children: \"Principal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyFour,\n          children: \"Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyFive,\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodySix,\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this));\n      counter++;\n\n      if (counter > 12) {\n        counter = 1;\n        counterYears += 1;\n      }\n    }\n\n    return tableRows;\n  };\n\n  const rowsRender = () => {\n    return addTableRows(loanMonths);\n  };\n\n  const getDate = yearsOrMonths => {\n    var today = new Date();\n    let current = today.getMonth() + 1 + '/' + today.getDate() + '/' + today.getFullYear();\n    setCurrentDate(current);\n\n    if (yearsOrMonths === 'years') {\n      var future = new Date();\n      future.setFullYear(future.getFullYear() + loanYears);\n      setFutureDate(nameOfMonths[future.getMonth() + 1] + ' ' + (future.getDate() - 1) + ', ' + future.getFullYear());\n    } else if (yearsOrMonths === 'nan') {\n      var today = new Date();\n      let fut = nameOfMonths[today.getMonth()] + ' ' + today.getDate() + ', ' + today.getFullYear();\n      setFutureDate(fut);\n    } else {\n      var future = new Date();\n      future.setMonth(future.getMonth() + loanMonths);\n      setFutureDate(nameOfMonths[future.getMonth()] + ' ' + (future.getDate() - 1) + ', ' + future.getFullYear());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.MainWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CentralWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Date,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.StartDateDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.StartDateDivText,\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.StartDateDivInput,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentDate,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.EstimatedDate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.EstimatedDateText,\n            children: \"Estimated Payoff Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.EstimatedDateEnd,\n            children: futureDate ? futureDate : currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Title,\n        children: \"Amortization Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadOne,\n              children: \"Payment Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadTwo,\n              children: \"Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadThree,\n              children: \"Principal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadFour,\n              children: \"Interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadFive,\n              children: \"Total Interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadSix,\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rowsRender()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Print,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.PrintText,\n          children: \"Print Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.PrintImage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Print\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AmortizationSchedule, \"8TAFQgnLAXzEMw4yxaNswQx5uVA=\");\n\n_c = AmortizationSchedule;\nexport default AmortizationSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmortizationSchedule\");","map":{"version":3,"sources":["/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js"],"names":["React","useState","useEffect","styles","logo","nameOfMonths","nameOfMonthsShortcut","AmortizationSchedule","loanYears","loanMonths","payment","currentDate","setCurrentDate","futureDate","setFutureDate","numberOfMonths","setNumberOfMonths","Number","isInteger","getDate","isNaN","addTableRows","pmt","ir","np","pv","fv","Math","pow","toFixed","console","log","currentMonth","today","Date","getMonth","currentYear","getFullYear","tableRows","counter","counterYears","i","push","TableRow","BodyOne","BodyTwo","BodyThree","BodyFour","BodyFive","BodySix","rowsRender","yearsOrMonths","current","future","setFullYear","fut","setMonth","MainWrapper","CentralWrapper","StartDateDiv","StartDateDivText","StartDateDivInput","EstimatedDate","EstimatedDateText","EstimatedDateEnd","Title","Table","HeadOne","HeadTwo","HeadThree","HeadFour","HeadFive","HeadSix","Print","PrintText","PrintImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './AmortizationSchedule.module.css';\nimport logo from '../photos/forPrint.png';\nimport { nameOfMonths, nameOfMonthsShortcut } from '../Mocks/mockData';\n\nconst AmortizationSchedule = ({ loanYears, loanMonths, payment }) => {\n    const [currentDate, setCurrentDate] = useState();\n    const [futureDate, setFutureDate] = useState();\n    const [numberOfMonths, setNumberOfMonths] = useState(0);\n\n    useEffect(() => {\n        if (Number.isInteger(loanYears) === true && Number.isInteger(loanMonths) === false && (loanMonths !== 0 || loanYears !== 0)) {\n            getDate('years');\n        }\n        else if (Number.isNaN(loanYears) === true || Number.isNaN(loanMonths) === true) {\n            getDate('nan');\n        }\n        else {\n            getDate('months');\n            addTableRows(loanMonths);\n        }\n    }, [loanYears, loanMonths]);\n\n    // function pmt(rate, nper, pv, fv, type) {\n    //     if (!fv) fv = 0;\n    //     if (!type) type = 0;\n\n    //     if (rate == 0) { return -(pv + fv) / nper };\n\n    //     var pvif = Math.pow(1 + rate, nper);\n    //     var pmtt = rate / (pvif - 1) * -(pv * pvif + fv);\n\n    //     if (type == 1) {\n    //         pmtt /= (1 + rate);\n    //     };\n\n    //     return pmt;\n    // }\n\n    // function ipmt(pv, pmt, rate, per) {\n    //     var tmp = Math.pow(1 + rate, per);\n    //     return 0 - (pv * tmp * rate + pmt * (tmp - 1));\n    // }\n\n    // function ppmt(rate, per, nper, pv, fv, type) {\n    //     if (per < 1 || (per >= nper + 1)) { return null };\n    //     var pmtt = pmt(rate, nper, pv, fv, type);\n    //     var ipmtt = ipmt(pv, pmt, rate, per - 1);\n    //     return pmtt - ipmtt;\n    // }\n\n    // Last principal\n    function pmt(ir, np, pv, fv) {\n        /*\n        ir - interest rate per month\n        np - number of periods (months)\n        pv - present value\n        fv - future value (residual value)\n        */\n        var pmt = (ir * (pv * Math.pow((ir + 1), np) + fv)) / ((ir + 1) * (Math.pow((ir + 1), np) - 1));\n        return pmt.toFixed(2);\n    }\n\n    console.log('pmt', pmt((5 / 12) / 100, 24, 20000, 873.79));\n    console.log('interest', (((5 / 100) / 6) * 20000).toFixed(2));\n\n    const currentMonth = () => {\n        var today = new Date;\n        return today.getMonth() + 1;\n    }\n\n    const currentYear = () => {\n        var today = new Date();\n        return today.getFullYear();\n    }\n\n    const addTableRows = (loanMonths) => {\n        var tableRows = [];\n        var counter = currentMonth() + 1;\n        var counterYears = currentYear();\n        for (var i = 0; i < loanMonths; i++) {\n            tableRows.push(\n                <tr className={styles.TableRow}>\n                    <th className={styles.BodyOne}>{nameOfMonthsShortcut[counter - 1]} {counterYears}</th>\n                    <th className={styles.BodyTwo}>${payment.toFixed(2)}</th>\n                    <th className={styles.BodyThree}>Principal</th>\n                    <th className={styles.BodyFour}>Interest</th>\n                    <th className={styles.BodyFive}>Total Interest</th>\n                    <th className={styles.BodySix}>Balance</th>\n                </tr>\n            )\n            counter++;\n            if (counter > 12) {\n                counter = 1;\n                counterYears += 1;\n            }\n        }\n        return tableRows;\n    }\n\n    const rowsRender = () => {\n        return (\n            addTableRows(loanMonths)\n        )\n    }\n\n    const getDate = (yearsOrMonths) => {\n        var today = new Date();\n        let current = (today.getMonth() + 1) + '/' + (today.getDate()) + '/' + (today.getFullYear());\n        setCurrentDate(current);\n        if (yearsOrMonths === 'years') {\n            var future = new Date();\n            future.setFullYear(future.getFullYear() + loanYears);\n            setFutureDate((nameOfMonths[future.getMonth() + 1]) + ' ' + (future.getDate() - 1) + ', ' + (future.getFullYear()));\n        }\n        else if (yearsOrMonths === 'nan') {\n            var today = new Date();\n            let fut = (nameOfMonths[today.getMonth()]) + ' ' + (today.getDate()) + ', ' + (today.getFullYear());\n            setFutureDate(fut);\n        }\n        else {\n            var future = new Date();\n            future.setMonth(future.getMonth() + loanMonths);\n            setFutureDate((nameOfMonths[future.getMonth()]) + ' ' + (future.getDate() - 1) + ', ' + (future.getFullYear()));\n        }\n    }\n\n    return (\n        <div className={styles.MainWrapper}>\n            <div className={styles.CentralWrapper}>\n                <div className={styles.Date}>\n                    <div className={styles.StartDateDiv}>\n                        <div className={styles.StartDateDivText}>\n                            Start Date\n                        </div>\n                        <div className={styles.StartDateDivInput}>\n                            <input type=\"text\" value={currentDate} disabled={true}></input>\n                        </div>\n                    </div>\n                    <div className={styles.EstimatedDate}>\n                        <div className={styles.EstimatedDateText}>\n                            Estimated Payoff Date\n                        </div>\n                        <div className={styles.EstimatedDateEnd}>\n                            {futureDate ? futureDate : currentDate}\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.Title}>\n                    Amortization Schedule\n                </div>\n                <div className={styles.Table}>\n                    <thead>\n                        <tr>\n                            <th className={styles.HeadOne}>Payment Date</th>\n                            <th className={styles.HeadTwo}>Payment</th>\n                            <th className={styles.HeadThree}>Principal</th>\n                            <th className={styles.HeadFour}>Interest</th>\n                            <th className={styles.HeadFive}>Total Interest</th>\n                            <th className={styles.HeadSix}>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rowsRender()}\n                    </tbody>\n                </div>\n                <div className={styles.Print}>\n                    <div className={styles.PrintText}>\n                        Print Schedule\n                    </div>\n                    <div className={styles.PrintImage}>\n                        <img alt=\"Print\" src={logo} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AmortizationSchedule;"]},"metadata":{},"sourceType":"module"}