{"ast":null,"code":"var _jsxFileName = \"/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './AmortizationSchedule.module.css';\nimport logo from '../photos/forPrint.png';\nimport { nameOfMonths, nameOfMonthsShortcut } from '../Mocks/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AmortizationSchedule = ({\n  loanYears,\n  loanMonths,\n  payment,\n  interestRate,\n  loanAmount,\n  addMonthlyPayment,\n  everyMounthAmount,\n  everyMounthName,\n  oneTimeAmount,\n  oneTimeMonth,\n  oneTimeYear\n}) => {\n  _s();\n\n  const [currentDate, setCurrentDate] = useState();\n  const [futureDate, setFutureDate] = useState(); // const [totalInterestVar, setTotalInterestVar] = useState(0);\n  // const [numberOfMonths, setNumberOfMonths] = useState(0);\n\n  var totalInterestVar = 0;\n  const nullVar = 0; // console.log('addMonthlyPayment', addMonthlyPayment);\n\n  useEffect(() => {\n    if (Number.isInteger(loanYears) === true && Number.isInteger(loanMonths) === false && (loanMonths !== 0 || loanYears !== 0)) {\n      getDate('years');\n    } else if (Number.isNaN(loanYears) === true || Number.isNaN(loanMonths) === true) {\n      getDate('nan');\n    } else {\n      getDate('months');\n      addTableRows(loanMonths);\n    }\n\n    if (totalInterestVar !== 0) {// console.log('Last month payment', loanAmount - totalInterestVar);\n    }\n  }, [loanYears, loanMonths, totalInterestVar]);\n  useEffect(() => {\n    const lastNumber = (paymentt, pti) => {\n      console.log('-----POCETAK--');\n\n      for (var i = 0; i < loanMonths; i++) {\n        console.log(i + 1);\n        console.log('variable', ((i + 1) * paymentt).toFixed(2));\n        console.log('my', (pti - (i + 1) * paymentt).toFixed(2));\n\n        if ((pti - (i + 1) * paymentt).toFixed(2) < 0) {\n          console.log('KONACNA', variable);\n        }\n      }\n\n      console.log('-----KRAJ--');\n    };\n\n    lastNumber(430.3321485354123 + 40, loanAmount + 150.68);\n  }, []);\n\n  const interestPerMounth = (interestRate, pmtt) => {\n    return interestRate / 100 / 12 * pmtt;\n  };\n\n  const currentMonth = () => {\n    var today = new Date();\n    return today.getMonth() + 1;\n  };\n\n  const currentYear = () => {\n    var today = new Date();\n    return today.getFullYear();\n  }; // const lastNumber = (payment, pti) => {\n  //     console.log('-----POCETAK--');\n  //     console.log('pti', pti);\n  //     var lastNum = 0;\n  //     var variable = 0;\n  //     var counter = 0;\n  //     console.log('LLL', loanMonths);\n  //     for (var i = 0; i < loanMonths; i++) {\n  //         console.log(i);\n  //         console.log('variable', ((i + 1) * payment).toFixed(2));\n  //         console.log('my', (pti - ((i + 1) * payment)).toFixed(2));\n  //     }\n  //     console.log('-----KRAJ--');\n  // }\n  // lastNumber(payment, loanAmount + 163.99);\n\n\n  const addTableRows = loanMonths => {\n    var tableRows = [];\n    var counter = currentMonth() + 1;\n    var counterYears = currentYear();\n    payment = parseFloat(payment) + parseFloat(addMonthlyPayment); // console.log('&&&&&&&&', payment);\n    // var paymentt = (parseFloat(payment) + parseFloat(addMonthlyPayment));\n\n    var interest = interestPerMounth(interestRate, loanAmount);\n    var principal = payment - interest;\n    var balance = loanAmount - principal;\n    var totalInt = parseFloat(interest);\n\n    for (var i = 0; i < loanMonths; i++) {\n      tableRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: styles.TableRow,\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyOne,\n          children: [nameOfMonthsShortcut[counter - 1], \" \", counterYears]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyTwo,\n          children: [\"$\", Number.isNaN(payment) === false ? parseFloat(payment).toFixed(2) : nullVar.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyThree,\n          children: [\"$\", Number.isNaN(principal) === false ? principal.toFixed(2) : nullVar.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyFour,\n          children: [\"$\", Number.isNaN(interest) === false ? interest.toFixed(2) : nullVar.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodyFive,\n          children: [\"$\", Number.isNaN(totalInt) === false ? totalInt.toFixed(2) : nullVar.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: styles.BodySix,\n          children: [\"$\", balance < 0 || Number.isNaN(balance) === true ? nullVar.toFixed(2) : balance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this));\n      interest = interestPerMounth(interestRate, balance);\n      totalInt = parseFloat(parseFloat(totalInt) + parseFloat(interest));\n      principal = payment - interest;\n      balance = balance - principal;\n      counter++;\n\n      if (counter > 12) {\n        counter = 1;\n        counterYears += 1;\n      }\n\n      if (i === loanMonths - 1) {\n        totalInterestVar = +totalInt;\n      }\n    }\n\n    return tableRows;\n  };\n\n  const rowsRender = () => {\n    return addTableRows(loanMonths);\n  };\n\n  const getDate = yearsOrMonths => {\n    var today = new Date();\n    let current = today.getMonth() + 1 + '/' + today.getDate() + '/' + today.getFullYear();\n    setCurrentDate(current);\n\n    if (yearsOrMonths === 'years') {\n      var future = new Date();\n      future.setFullYear(future.getFullYear() + loanYears);\n      setFutureDate(nameOfMonths[future.getMonth() + 1] + ' ' + future.getDate() + ', ' + future.getFullYear());\n    } else if (yearsOrMonths === 'nan') {\n      // var today = new Date();\n      let fut = nameOfMonths[today.getMonth()] + ' ' + today.getDate() + ', ' + today.getFullYear();\n      setFutureDate(fut);\n    } else {\n      var future = new Date();\n      future.setMonth(future.getMonth() + loanMonths);\n      setFutureDate(nameOfMonths[future.getMonth()] + ' ' + future.getDate() + ', ' + future.getFullYear());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.MainWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CentralWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Date,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.StartDateDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.StartDateDivText,\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.StartDateDivInput,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentDate,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.EstimatedDate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.EstimatedDateText,\n            children: \"Estimated Payoff Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.EstimatedDateEnd,\n            children: futureDate ? futureDate : currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Title,\n        children: \"Amortization Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadOne,\n              children: \"Payment Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadTwo,\n              children: \"Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadThree,\n              children: \"Principal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadFour,\n              children: \"Interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadFive,\n              children: \"Total Interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.HeadSix,\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rowsRender()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Print,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.PrintText,\n          children: \"Print Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.PrintImage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Print\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AmortizationSchedule, \"z7d+Spmysjt1MMwNkrHz5HYthN0=\");\n\n_c = AmortizationSchedule;\nexport default AmortizationSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmortizationSchedule\");","map":{"version":3,"sources":["/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js"],"names":["React","useState","useEffect","styles","logo","nameOfMonths","nameOfMonthsShortcut","AmortizationSchedule","loanYears","loanMonths","payment","interestRate","loanAmount","addMonthlyPayment","everyMounthAmount","everyMounthName","oneTimeAmount","oneTimeMonth","oneTimeYear","currentDate","setCurrentDate","futureDate","setFutureDate","totalInterestVar","nullVar","Number","isInteger","getDate","isNaN","addTableRows","lastNumber","paymentt","pti","console","log","i","toFixed","variable","interestPerMounth","pmtt","currentMonth","today","Date","getMonth","currentYear","getFullYear","tableRows","counter","counterYears","parseFloat","interest","principal","balance","totalInt","push","TableRow","BodyOne","BodyTwo","BodyThree","BodyFour","BodyFive","BodySix","rowsRender","yearsOrMonths","current","future","setFullYear","fut","setMonth","MainWrapper","CentralWrapper","StartDateDiv","StartDateDivText","StartDateDivInput","EstimatedDate","EstimatedDateText","EstimatedDateEnd","Title","Table","HeadOne","HeadTwo","HeadThree","HeadFour","HeadFive","HeadSix","Print","PrintText","PrintImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './AmortizationSchedule.module.css';\nimport logo from '../photos/forPrint.png';\nimport { nameOfMonths, nameOfMonthsShortcut } from '../Mocks/mockData';\n\nconst AmortizationSchedule = ({ loanYears, loanMonths, payment, interestRate, loanAmount, addMonthlyPayment, everyMounthAmount, everyMounthName, oneTimeAmount, oneTimeMonth, oneTimeYear }) => {\n    const [currentDate, setCurrentDate] = useState();\n    const [futureDate, setFutureDate] = useState();\n    // const [totalInterestVar, setTotalInterestVar] = useState(0);\n    // const [numberOfMonths, setNumberOfMonths] = useState(0);\n    var totalInterestVar = 0;\n    const nullVar = 0;\n    // console.log('addMonthlyPayment', addMonthlyPayment);\n\n    useEffect(() => {\n        if (Number.isInteger(loanYears) === true && Number.isInteger(loanMonths) === false && (loanMonths !== 0 || loanYears !== 0)) {\n            getDate('years');\n        }\n        else if (Number.isNaN(loanYears) === true || Number.isNaN(loanMonths) === true) {\n            getDate('nan');\n        }\n        else {\n            getDate('months');\n            addTableRows(loanMonths);\n        }\n        if (totalInterestVar !== 0) {\n            // console.log('Last month payment', loanAmount - totalInterestVar);\n        }\n    }, [loanYears, loanMonths, totalInterestVar]);\n\n    useEffect(() => {\n        const lastNumber = (paymentt, pti) => {\n            console.log('-----POCETAK--');\n            for (var i = 0; i < loanMonths; i++) {\n                console.log(i + 1);\n                console.log('variable', ((i + 1) * paymentt).toFixed(2));\n                console.log('my', (pti - ((i + 1) * paymentt)).toFixed(2));\n                if ((pti - ((i + 1) * paymentt)).toFixed(2) < 0) {\n                    console.log('KONACNA', variable);\n                }\n            }\n            console.log('-----KRAJ--');\n        }\n        lastNumber(430.3321485354123 + 40, loanAmount + 150.68);\n    }, [])\n\n    const interestPerMounth = (interestRate, pmtt) => {\n        return (((interestRate / 100) / 12) * pmtt)\n    }\n\n    const currentMonth = () => {\n        var today = new Date();\n        return today.getMonth() + 1;\n    }\n\n    const currentYear = () => {\n        var today = new Date();\n        return today.getFullYear();\n    }\n\n    // const lastNumber = (payment, pti) => {\n    //     console.log('-----POCETAK--');\n    //     console.log('pti', pti);\n    //     var lastNum = 0;\n    //     var variable = 0;\n    //     var counter = 0;\n    //     console.log('LLL', loanMonths);\n    //     for (var i = 0; i < loanMonths; i++) {\n    //         console.log(i);\n    //         console.log('variable', ((i + 1) * payment).toFixed(2));\n    //         console.log('my', (pti - ((i + 1) * payment)).toFixed(2));\n    //     }\n    //     console.log('-----KRAJ--');\n    // }\n    // lastNumber(payment, loanAmount + 163.99);\n\n    const addTableRows = (loanMonths) => {\n        var tableRows = [];\n        var counter = currentMonth() + 1;\n        var counterYears = currentYear();\n        payment = (parseFloat(payment) + parseFloat(addMonthlyPayment));\n        // console.log('&&&&&&&&', payment);\n        // var paymentt = (parseFloat(payment) + parseFloat(addMonthlyPayment));\n        var interest = interestPerMounth(interestRate, loanAmount);\n        var principal = (payment - interest);\n        var balance = (loanAmount - principal);\n        var totalInt = parseFloat(interest);\n        for (var i = 0; i < loanMonths; i++) {\n            tableRows.push(\n                <tr className={styles.TableRow}>\n                    <th className={styles.BodyOne}>{nameOfMonthsShortcut[counter - 1]} {counterYears}</th>\n                    <th className={styles.BodyTwo}>${Number.isNaN(payment) === false ? parseFloat(payment).toFixed(2) : nullVar.toFixed(2)}</th>\n                    <th className={styles.BodyThree}>${Number.isNaN(principal) === false ? principal.toFixed(2) : nullVar.toFixed(2)}</th>\n                    <th className={styles.BodyFour}>${Number.isNaN(interest) === false ? interest.toFixed(2) : nullVar.toFixed(2)}</th>\n                    <th className={styles.BodyFive}>${Number.isNaN(totalInt) === false ? totalInt.toFixed(2) : nullVar.toFixed(2)}</th>\n                    <th className={styles.BodySix}>${balance < 0 || Number.isNaN(balance) === true ? nullVar.toFixed(2) : balance.toFixed(2)}</th>\n                </tr>\n            )\n            interest = interestPerMounth(interestRate, balance);\n            totalInt = parseFloat(parseFloat(totalInt) + parseFloat(interest));\n            principal = (payment - interest);\n            balance = (balance - principal);\n            counter++;\n            if (counter > 12) {\n                counter = 1;\n                counterYears += 1;\n            }\n            if (i === (loanMonths - 1)) {\n                totalInterestVar = + totalInt\n            }\n        }\n        return tableRows;\n    }\n\n    const rowsRender = () => {\n        return (\n            addTableRows(loanMonths)\n        )\n    }\n\n    const getDate = (yearsOrMonths) => {\n        var today = new Date();\n        let current = (today.getMonth() + 1) + '/' + (today.getDate()) + '/' + (today.getFullYear());\n        setCurrentDate(current);\n        if (yearsOrMonths === 'years') {\n            var future = new Date();\n            future.setFullYear(future.getFullYear() + loanYears);\n            setFutureDate((nameOfMonths[future.getMonth() + 1]) + ' ' + (future.getDate()) + ', ' + (future.getFullYear()));\n        }\n        else if (yearsOrMonths === 'nan') {\n            // var today = new Date();\n            let fut = (nameOfMonths[today.getMonth()]) + ' ' + (today.getDate()) + ', ' + (today.getFullYear());\n            setFutureDate(fut);\n        }\n        else {\n            var future = new Date();\n            future.setMonth(future.getMonth() + loanMonths);\n            setFutureDate((nameOfMonths[future.getMonth()]) + ' ' + (future.getDate()) + ', ' + (future.getFullYear()));\n        }\n    }\n\n    return (\n        <div className={styles.MainWrapper}>\n            <div className={styles.CentralWrapper}>\n                <div className={styles.Date}>\n                    <div className={styles.StartDateDiv}>\n                        <div className={styles.StartDateDivText}>\n                            Start Date\n                        </div>\n                        <div className={styles.StartDateDivInput}>\n                            <input type=\"text\" value={currentDate} disabled={true}></input>\n                        </div>\n                    </div>\n                    <div className={styles.EstimatedDate}>\n                        <div className={styles.EstimatedDateText}>\n                            Estimated Payoff Date\n                        </div>\n                        <div className={styles.EstimatedDateEnd}>\n                            {futureDate ? futureDate : currentDate}\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.Title}>\n                    Amortization Schedule\n                </div>\n                <div className={styles.Table}>\n                    <thead>\n                        <tr>\n                            <th className={styles.HeadOne}>Payment Date</th>\n                            <th className={styles.HeadTwo}>Payment</th>\n                            <th className={styles.HeadThree}>Principal</th>\n                            <th className={styles.HeadFour}>Interest</th>\n                            <th className={styles.HeadFive}>Total Interest</th>\n                            <th className={styles.HeadSix}>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rowsRender()}\n                    </tbody>\n                </div>\n                <div className={styles.Print}>\n                    <div className={styles.PrintText}>\n                        Print Schedule\n                    </div>\n                    <div className={styles.PrintImage}>\n                        <img alt=\"Print\" src={logo} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AmortizationSchedule;"]},"metadata":{},"sourceType":"module"}