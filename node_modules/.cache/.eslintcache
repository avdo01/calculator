[{"/Users/ankora/Desktop/calculator/calculator/src/index.js":"1","/Users/ankora/Desktop/calculator/calculator/src/App.js":"2","/Users/ankora/Desktop/calculator/calculator/src/components/AmortizationCalculator/AmortizationCalculator.js":"3","/Users/ankora/Desktop/calculator/calculator/src/components/MortgageCalculator/MortgageCalculator.js":"4","/Users/ankora/Desktop/calc/calculator/src/index.js":"5","/Users/ankora/Desktop/calc/calculator/src/App.js":"6","/Users/ankora/Desktop/calc/calculator/src/components/MortgageCalculator/MortgageCalculator.js":"7","/Users/ankora/Desktop/calc/calculator/src/components/AmortizationCalculator/AmortizationCalculator.js":"8","/Users/ankora/Desktop/calc/calculator/src/components/AddExtraPayments/AddExtraPayments.js":"9","/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js":"10","/Users/ankora/Desktop/calc/calculator/src/components/Mocks/mockData.js":"11"},{"size":230,"mtime":1628768444524,"results":"12","hashOfConfig":"13"},{"size":372,"mtime":1628675244409,"results":"14","hashOfConfig":"13"},{"size":4366,"mtime":1628684196613,"results":"15","hashOfConfig":"13"},{"size":1611,"mtime":1628684444292,"results":"16","hashOfConfig":"13"},{"size":230,"mtime":1628768444524,"results":"17","hashOfConfig":"18"},{"size":623,"mtime":1628779026798,"results":"19","hashOfConfig":"18"},{"size":2249,"mtime":1628867610901,"results":"20","hashOfConfig":"18"},{"size":6504,"mtime":1631113113527,"results":"21","hashOfConfig":"18"},{"size":4912,"mtime":1631087442790,"results":"22","hashOfConfig":"18"},{"size":6797,"mtime":1631183014584,"results":"23","hashOfConfig":"18"},{"size":759,"mtime":1631102437798,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"decpmd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1j7m0ep",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/ankora/Desktop/calculator/calculator/src/index.js",[],"/Users/ankora/Desktop/calculator/calculator/src/App.js",[],"/Users/ankora/Desktop/calculator/calculator/src/components/AmortizationCalculator/AmortizationCalculator.js",[],"/Users/ankora/Desktop/calculator/calculator/src/components/MortgageCalculator/MortgageCalculator.js",["50"],"/Users/ankora/Desktop/calc/calculator/src/index.js",[],["51","52"],"/Users/ankora/Desktop/calc/calculator/src/App.js",[],"/Users/ankora/Desktop/calc/calculator/src/components/MortgageCalculator/MortgageCalculator.js",[],"/Users/ankora/Desktop/calc/calculator/src/components/AmortizationCalculator/AmortizationCalculator.js",["53","54","55"],"import React, { useState, useEffect } from 'react';\nimport AddExtraPayments from '../AddExtraPayments/AddExtraPayments';\nimport AmortizationSchedule from '../AmortizationSchedule/AmortizationSchedule';\nimport logo from '../photos/coolicon1.png';\nimport './amortizationCalculator.css';\n\nconst AmortizationCalculator = () => {\n    const [loanAmount, setLoanAmount] = useState();\n    const [loanYears, setLoanYears] = useState();\n    const [loanMonths, setLoanMonths] = useState();\n    const [interestRate, setInterestRate] = useState();\n    const [payment, setPayment] = useState(0);\n    const [totalInterest, setTotalInterest] = useState(0);\n    const [disabled, setDisabled] = useState(false);\n    const [amScheduleOpen, setAmScheduleOpen] = useState(false);\n\n    useEffect(() => {\n        if (loanAmount < 1000 || loanAmount > 999999 || loanMonths > 480 || loanYears > 40 || interestRate > 99) {\n            setDisabled(true);\n        }\n        else {\n            setDisabled(false);\n        }\n    }, [loanYears, loanMonths, loanAmount, interestRate]);\n\n    useEffect(() => {\n        setLoanMonths(loanYears * 12);\n    }, [loanYears]);\n\n    useEffect(() => {\n        setLoanYears(loanMonths / 12);\n    }, [loanMonths]);\n\n    const totalInterestt = (value, loanMonths, loanAmount) => {\n        return (value * loanMonths) - loanAmount;\n    }\n\n    const amScheduleToggle = () => {\n        setAmScheduleOpen(!amScheduleOpen);\n    }\n\n    const getDate = () => {\n        var today = new Date();\n        var date = (today.getMonth() + 1) + '/' + today.getDate() + '/' + today.getFullYear();\n        console.log(date);\n    }\n\n    const handleClick = () => {\n        var percentageRate = interestRate / 1200;\n        var lengthOfLoan = 12 * loanYears;\n        var monthlyPayment = (loanAmount * percentageRate) / (1 - (Math.pow((1 + percentageRate), lengthOfLoan * -1)));\n        if (Number.isNaN(monthlyPayment)) { setPayment(0) }\n        else { setPayment(monthlyPayment); }\n        const totals = totalInterestt(monthlyPayment, loanMonths, loanAmount);\n        setTotalInterest(totals);\n    }\n\n    return (\n        <div className='main'>\n            <div className='main-wrapper-am'>\n                <div className='left-content-am'>\n                    <div className='left-am-input'>\n                        <div className='inputs'>\n                            <h2>Loan amount</h2>\n                            <input type='number' value={loanAmount} onChange={(e) => setLoanAmount(parseFloat(e.target.value))} />\n                            {loanAmount < 1000 || loanAmount > 999999 ? <div className='invalid'>Minimum value: $1000<br />Maximum value: $999999</div> : null}\n                        </div>\n                        <div className='inputs'>\n                            <h2>Loan term in years</h2>\n                            <input type='number' value={loanYears} onChange={(e) => setLoanYears(parseFloat(e.target.value))} />\n                            {loanYears > 40 ? <div className='invalid'>Maximum years: 40</div> : null}\n                        </div>\n                    </div>\n                    <div className='left-am-line'>\n                        <div className='line-one' />\n                        or\n                        <div className='line-one' />\n                    </div>\n                    <div className='left-am-input'>\n                        <div className='inputs'>\n                            <h2>Loan term in months</h2>\n                            <input type='number' value={loanMonths} onChange={(e) => setLoanMonths(parseFloat(e.target.value))} />\n                            {loanMonths > 480 ? <div className='invalid'>Maximum months: 480</div> : null}\n\n                        </div>\n                        <div className='inputs'>\n                            <h2>Interest rate per year</h2>\n                            <input type='number' value={interestRate} onChange={(e) => setInterestRate(parseFloat(e.target.value))} />\n                            {interestRate > 99 || interestRate < 1 ? <div className='invalid'>Minimum rate: 1<br />Maximum rate: 99</div> : null}\n                        </div>\n                    </div>\n                    <div className='left-am-button'>\n                        <button disabled={disabled} onClick={() => handleClick()}>Calculate</button>\n                        {!amScheduleOpen ?\n                            <a onClick={() => amScheduleToggle()}><h2>Show amortization schedule</h2></a>\n                            :\n                            <a onClick={() => amScheduleToggle()}><h2>Hide amortization schedule</h2></a>\n                        }\n                        <img src={logo} alt='calendar-logo' />\n                    </div>\n                </div>\n                <div className='right-content-am'>\n                    <div className='right-content-first'>\n                        <div className='right-number-am'>\n                            ${payment === 0 ? 0 : payment.toFixed(2)}\n                        </div>\n                        <div className='right-text-am'>\n                            Monthly Payments\n                        </div>\n                    </div>\n                    <div className='right-content-second'>\n                        <div className='right-totals'>\n                            <div className='right-totals-text'>\n                                Total Principal Paid\n                            </div>\n                            <div className='right-totals-number'>\n                                ${loanAmount ? loanAmount : 0}\n                            </div>\n                        </div>\n                        <div className='right-totals-line' />\n                        <div className='right-totals'>\n                            <div className='right-totals-text'>\n                                Total Interest Paid\n                            </div>\n                            <div className='right-totals-number' style={{ paddingLeft: '8px' }}>\n                                ${totalInterest ? totalInterest.toFixed(2) : 0}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <AddExtraPayments />\n            {amScheduleOpen ? <AmortizationSchedule loanYears={loanYears} loanMonths={loanMonths} payment={payment} interestRate={interestRate} loanAmount={loanAmount} /> : null}\n        </div>\n    )\n}\n\nexport default AmortizationCalculator;","/Users/ankora/Desktop/calc/calculator/src/components/AddExtraPayments/AddExtraPayments.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react';\nimport styles from './AddExtraPayments.module.css';\nimport plus from '../photos/plus.png';\nimport minus from '../photos/minus.png';\nimport { monthsInYear, nameOfMonths, years } from '../Mocks/mockData';\n\nconst AddExtraPayments = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [amountMonthly, setAmountMonthly] = useState(0);\n    const [extraYearly, setExtraYearly] = useState(0);\n    const [extraYearlyMonth, setExtraYearlyMonth] = useState('');\n    const [oneTime, setOneTime] = useState(0);\n    const [oneTimeMonth, setOneTimeMonth] = useState(0);\n    const [oneTimeYear, setOneTimeYear] = useState(0);\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    return (\n        <div className={styles.mainWrapper}>\n            <div className={styles.up}>\n                <div className={styles.leftContent}>\n                    {\n                        !isOpen ?\n                            <div className={styles.leftContentText}>\n                                Add Extra Payments\n                            </div>\n                            :\n                            <div className={styles.leftContentText}>\n                                Hide Extra Payments\n                            </div>\n                    }\n                </div>\n                <div className={styles.rightContent}>\n                    {!isOpen ? <a onClick={() => handleClick()}><img className={styles.plus} src={plus} alt='plus-logo' /></a> : null}\n                    {isOpen ? <a onClick={() => handleClick()}><img className={styles.minus} src={minus} alt='minus-logo' /></a> : null}\n                </div>\n            </div>\n            {isOpen ?\n                <div className={styles.down}>\n                    <div className={styles.downText}>\n                        <div className={styles.downTextContent}>\n                            Calculate the impact of extra payments using any combination of the\n                        </div>\n                        <div className={styles.downTextContent}>\n                            inputs below. To see your new estimated payoff date, click ‘Show\n                        </div>\n                        <div className={styles.downTextContent}>\n                            amortization schedule’ link above.\n                        </div>\n                    </div>\n                    <div className={styles.downInput}>\n                        <div className={styles.inputText}>\n                            Amount to your monthly payment\n                        </div>\n                        <div className={styles.inputs}>\n                            <input type='number' placeholder='$'></input>\n                        </div>\n                        <div className={styles.inputText}>\n                            Amount as an extra yearly payment occurring every:\n                        </div>\n                        <div className={styles.inputs}>\n                            <input type='number' placeholder='$'></input>\n                            <select>\n                                {\n                                    nameOfMonths.map(month => {\n                                        return (\n                                            <option>{month}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className={styles.inputText}>\n                            Amount as a one-time payment in:\n                        </div>\n                        <div className={styles.inputs}>\n                            <input type='number' placeholder='$'></input>\n                            <select>\n                                {\n                                    nameOfMonths.map(month => {\n                                        return (\n                                            <option>{month}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                            <select style={{ width: '80px' }}>\n                                {\n                                    years.map(year => {\n                                        return (\n                                            <option>{year}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <div className={styles.downButton}>\n                        <button>Apply Extra Payments</button>\n                    </div>\n                </div> : null\n            }\n        </div>\n    )\n}\n\nexport default AddExtraPayments;","/Users/ankora/Desktop/calc/calculator/src/components/AmortizationSchedule/AmortizationSchedule.js",["72","73","74","75","76","77"],"/Users/ankora/Desktop/calc/calculator/src/components/Mocks/mockData.js",[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"86","line":42,"column":11,"nodeType":"80","messageId":"81","endLine":42,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":95,"column":29,"nodeType":"89","endLine":95,"endColumn":67},{"ruleId":"87","severity":1,"message":"88","line":97,"column":29,"nodeType":"89","endLine":97,"endColumn":67},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"90","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":22},{"ruleId":"78","severity":1,"message":"91","line":9,"column":12,"nodeType":"80","messageId":"81","endLine":9,"endColumn":25},{"ruleId":"78","severity":1,"message":"92","line":9,"column":27,"nodeType":"80","messageId":"81","endLine":9,"endColumn":43},{"ruleId":"78","severity":1,"message":"93","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":23},{"ruleId":"78","severity":1,"message":"94","line":10,"column":25,"nodeType":"80","messageId":"81","endLine":10,"endColumn":39},{"ruleId":"78","severity":1,"message":"95","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":28},{"ruleId":"78","severity":1,"message":"96","line":11,"column":30,"nodeType":"80","messageId":"81","endLine":11,"endColumn":49},{"ruleId":"78","severity":1,"message":"97","line":12,"column":12,"nodeType":"80","messageId":"81","endLine":12,"endColumn":19},{"ruleId":"78","severity":1,"message":"98","line":12,"column":21,"nodeType":"80","messageId":"81","endLine":12,"endColumn":31},{"ruleId":"78","severity":1,"message":"99","line":13,"column":12,"nodeType":"80","messageId":"81","endLine":13,"endColumn":24},{"ruleId":"78","severity":1,"message":"100","line":13,"column":26,"nodeType":"80","messageId":"81","endLine":13,"endColumn":41},{"ruleId":"78","severity":1,"message":"101","line":14,"column":12,"nodeType":"80","messageId":"81","endLine":14,"endColumn":23},{"ruleId":"78","severity":1,"message":"102","line":14,"column":25,"nodeType":"80","messageId":"81","endLine":14,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":35,"column":32,"nodeType":"89","endLine":35,"endColumn":65},{"ruleId":"87","severity":1,"message":"88","line":36,"column":31,"nodeType":"89","endLine":36,"endColumn":64},{"ruleId":"78","severity":1,"message":"103","line":9,"column":12,"nodeType":"80","messageId":"81","endLine":9,"endColumn":26},{"ruleId":"78","severity":1,"message":"104","line":9,"column":28,"nodeType":"80","messageId":"81","endLine":9,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":23,"column":8,"nodeType":"107","endLine":23,"endColumn":31,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":30,"column":21,"nodeType":"111","messageId":"112","endLine":30,"endColumn":29,"fix":"113"},{"ruleId":"114","severity":1,"message":"115","line":96,"column":17,"nodeType":"80","messageId":"116","endLine":96,"endColumn":22},{"ruleId":"114","severity":1,"message":"117","line":101,"column":17,"nodeType":"80","messageId":"116","endLine":101,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'getDate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'monthsInYear' is defined but never used.","'amountMonthly' is assigned a value but never used.","'setAmountMonthly' is assigned a value but never used.","'extraYearly' is assigned a value but never used.","'setExtraYearly' is assigned a value but never used.","'extraYearlyMonth' is assigned a value but never used.","'setExtraYearlyMonth' is assigned a value but never used.","'oneTime' is assigned a value but never used.","'setOneTime' is assigned a value but never used.","'oneTimeMonth' is assigned a value but never used.","'setOneTimeMonth' is assigned a value but never used.","'oneTimeYear' is assigned a value but never used.","'setOneTimeYear' is assigned a value but never used.","'numberOfMonths' is assigned a value but never used.","'setNumberOfMonths' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addTableRows' and 'getDate'. Either include them or remove the dependency array.","ArrayExpression",["120"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"121","text":"122"},"no-redeclare","'today' is already defined.","redeclared","'future' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},[1141,1141],"()","Update the dependencies array to be: [loanYears, loanMonths, getDate, addTableRows]",{"range":"125","text":"126"},[938,961],"[loanYears, loanMonths, getDate, addTableRows]"]